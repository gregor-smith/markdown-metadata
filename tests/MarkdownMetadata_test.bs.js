// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var Jest = require("@glennsl/bs-jest/src/jest.js");
var Path = require("path");
var Js_option = require("bs-platform/lib/js/js_option.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var MarkdownMetadata = require("markdown-metadata");

var dirname = Js_option.getWithDefault(".", Caml_option.undefined_to_opt(typeof __dirname === "undefined" ? undefined : __dirname));

function exampleMatchesSnap(filename) {
  var path = Path.join(dirname, "examples", filename);
  return Fs.promises.readFile(path, {
                encoding: "utf8"
              }).then((function (example) {
                return Promise.resolve(Jest.Expect[/* toMatchSnapshot */16](Jest.Expect[/* expect */0](MarkdownMetadata.parseMetadata(example))));
              }));
}

Jest.testPromise("Single line metadata", undefined, (function (param) {
        return exampleMatchesSnap("single-line.md");
      }));

Jest.testPromise("Multi line metadata", undefined, (function (param) {
        return exampleMatchesSnap("multi-line.md");
      }));

Jest.testPromise("Whitespace before metadata", undefined, (function (param) {
        return exampleMatchesSnap("whitespace.md");
      }));

Jest.testPromise("No metadata", undefined, (function (param) {
        return exampleMatchesSnap("no-metadata.md");
      }));

exports.dirname = dirname;
exports.exampleMatchesSnap = exampleMatchesSnap;
/* dirname Not a pure module */
